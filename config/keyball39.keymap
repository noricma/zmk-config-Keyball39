#define ONISHI_M 0
#define ONISHI_W 1
#define NUM     2
#define FUN&BT   3
#define MOUSE  4
#define SCROLL   5
#define SYM_M     6
#define SYM_W     7
#define U_MOUSE_MOVE_MAX 1000  // 新しい最大速度設定（デフォルトは600）
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)
#define U_MOUSE_SCROLL_MAX 5  // 新しい最大スクロール速度設定（デフォルトは10）
#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        tog_on: toggle_layer {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer";
        };
    };

    combos {
        compatible = "zmk,combos";

        eisu {
            bindings = <&kp LANG2>;
            key-positions = <21 22>;
        };

        kana {
            bindings = <&kp LANG1>;
            key-positions = <27 28>;
        };
    };

    macros {
        bt0: bt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_on 0>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 0>,
                <&macro_wait_time 500>;

            label = "BT0";
        };

        bt1: bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_on 0>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 500>,
                <&tog_on 1>;

            // Windows用レイヤーに移動

            label = "BT1";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_mac {
            label = "ONISHI_M";
            bindings = <
&kp Q       &kp L             &kp U         &kp F                       &kp LS(LG(NUMBER_3))                              &kp LS(LG(NUMBER_4))  &kp W  &kp R  &kp Y  &kp P
&kp E       &kp I             &kp A         &kp O                       &kp MINUS                                         &kp K                 &kp T  &kp N  &kp S  &kp H
&kp Z       &kp X             &kp C         &kp V                       &kp COMMA                                         &kp G                 &kp D  &kp M  &kp J  &kp B
&kp ESCAPE  &kp LEFT_CONTROL  &kp LEFT_ALT  &mt LEFT_COMMAND BACKSPACE  &lt 2 SPACE           &lt 4 TAB  &kp RIGHT_SHIFT  &lt 6 ENTER                                &mo 3
            >;
        };

        default_win {
            label = "ONISHI_W";
            bindings = <
&kp Q       &kp L             &kp U         &kp F                       &none                                    &kp LG(LS(S))  &kp W  &kp R  &kp Y  &kp P
&kp E       &kp I             &kp A         &kp O                       &kp MINUS                                &kp K          &kp T  &kp N  &kp S  &kp H
&kp Z       &kp X             &kp C         &kp V                       &kp COMMA                                &kp G          &kp D  &kp M  &kp J  &kp B
&kp ESCAPE  &kp LEFT_COMMAND  &kp LEFT_ALT  &mt LEFT_CONTROL BACKSPACE  &lt 2 SPACE  &lt 4 TAB  &kp RIGHT_SHIFT  &lt 7 ENTER                         &mo 3
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp TILDE     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none                       &none      &kp LESS_THAN  &kp EQUAL     &kp GREATER_THAN  &kp PERCENT
&kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none                       &kp CARET  &kp PLUS       &kp MINUS     &kp ASTRK         &kp SLASH
&kp DOLLAR    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PERIOD                  &kp UNDER  &kp EXCL       &kp QUESTION  &kp COLON         &kp SEMI
&trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans                                                    &trans
            >;
        };

        function_layer {
            label = "FUN&BT";
            bindings = <
&none    &kp F1  &kp F2  &kp F3  &none                   &none       &none  &none  &none         &none
&kp F10  &kp F4  &kp F5  &kp F6  &none                   &bt BT_CLR  &bt0   &bt1   &bt BT_SEL 2  &bt BT_SEL 3
&kp F11  &kp F7  &kp F8  &kp F9  &none                   &none       &none  &none  &none         &none
&kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                  &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none  &none   &none   &none   &none                   &none   &none      &kp PG_UP  &none      &none
&none  &none   &none   &none   &none                   &none   &mkp LCLK  &mo 5      &mkp RCLK  &mkp MCLK
&none  &none   &none   &none   &none                   &none   &none      &kp PG_DN  &none      &none
&none  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                   &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        symbol_layer_m {
            label = "SYM_M";
            bindings = <
&kp AT_SIGN    &kp LEFT_BRACKET      &kp DOUBLE_QUOTES  &kp RIGHT_BRACKET      &none                          &none       &kp LG(LEFT_ARROW)  &kp UP_ARROW     &kp LG(RIGHT_ARROW)   &none
&kp HASH       &kp LEFT_PARENTHESIS  &kp SQT            &kp RIGHT_PARENTHESIS  &kp AMPERSAND                  &none       &kp LEFT_ARROW      &kp DOWN_ARROW   &kp RIGHT_ARROW       &none
&kp BACKSLASH  &kp LEFT_BRACE        &kp GRAVE          &kp RIGHT_BRACE        &kp PIPE                       &kp C_MUTE  &kp C_VOLUME_DOWN   &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC
&trans         &trans                &trans             &trans                 &trans         &trans  &trans  &trans                                                                 &none
            >;
        };

        symbol_layer_w {
            label = "SYM_W";
            bindings = <
&kp AT_SIGN    &kp LEFT_BRACKET      &kp DOUBLE_QUOTES  &kp RIGHT_BRACKET      &none                          &none       &kp HOME           &kp UP_ARROW     &kp END          &none
&kp HASH       &kp LEFT_PARENTHESIS  &kp SQT            &kp RIGHT_PARENTHESIS  &kp AMPERSAND                  &none       &kp LEFT_ARROW     &kp DOWN_ARROW   &kp RIGHT_ARROW  &none
&kp BACKSLASH  &kp LEFT_BRACE        &kp GRAVE          &kp RIGHT_BRACE        &kp PIPE                       &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none            &none
&trans         &trans                &trans             &trans                 &trans         &trans  &trans  &trans                                                           &none
            >;
        };
    };
};
